% function [Aqp,Bqp] = get_AqpBqp(Xt,XdN,p)
%     %-----decomposite and transform-----
%     
%     [pf34,X_ref13_N]=X2x(XdN,p);
%     avg_psi=mean(X_ref13_N(3,:));
%     
%     [pf34_0,x0]=X2x(Xt,p);
%     pf34_0=pf34_0{1};
%     psi0=x0(3);
%     %----------------------------
%     
%     Ac0=get_Ac(psi0);
%     Ad0=dis_A(Ac0,p.Tmpc);
%     Bc0=get_Bc(psi0,pf34_0,p);
%     Bd0=dis_B(Ac0,Bc0,p.Tmpc);
%     
%     Ac=get_Ac(avg_psi);
%     Ad=dis_A(Ac,p.Tmpc);
%     
%     Aqp=[];
%     Bqp=[];
%     
%     An=Ad0;
%     Bn=[Bd0,zeros(13,12*(p.predHorizon-1))];
%     for k=1:(p.predHorizon-1)
%         Aqp=[Aqp;An];
%         Bqp=[Bqp;Bn];
%         
%         An=Ad*An;
%         Bc=get_Bc(X_ref13_N(3,k),pf34{k},p);
%         Bd=dis_B(Ac,Bc,p.Tmpc);
%         Bn=Ad*Bn+[zeros(13,12*k),Bd,zeros(13,12*(p.predHorizon-k-1))];
%     end
%     Aqp=[Aqp;An];
%     Bqp=[Bqp;Bn];
% end
%%
function [Aqp,Bqp] = get_AqpBqp(Xt,XdN,p)
    %-----decomposite and transform-----
    [pf34,X_ref13_N]=X2x(XdN,p);
    
    [pf34_0,x0]=X2x(Xt,p);
    pf34_0=pf34_0{1};
    %-----get Ad0~Adk-1 and Bd0~Bdk-1----
    Ac0=get_Ac(x0(3));
    Ad0=dis_A(Ac0,p.Tmpc);
    Bc0=get_Bc(x0(3),pf34_0,p);
    Bd0=dis_B(Ac0,Bc0,p.Tmpc);
    
    Ad_cell=cell(1,p.predHorizon);
    Bd_cell=cell(1,p.predHorizon);
    Ad_cell{1}=Ad0;
    Bd_cell{1}=Bd0;
    for i=1:p.predHorizon-1
        Ac=get_Ac(X_ref13_N(3,i));
        Ad=dis_A(Ac,p.Tmpc);
        Bc=get_Bc(X_ref13_N(3,i),pf34{i},p);
        Bd=dis_B(Ac,Bc,p.Tmpc);
        Ad_cell{i+1}=Ad;
        Bd_cell{i+1}=Bd;
    end
    
    D_cell=cell(1,p.predHorizon);
    D_cell{1}=Ad_cell{1};
    for i=2:p.predHorizon
        D_cell{i}=D_cell{i-1}*Ad_cell{i};
    end
    
    Aqp=zeros(p.predHorizon*size(Ad0,1),size(Ad0,2));
    for i=1:p.predHorizon
        Aqp((i-1)*size(Ad0,1)+1:i*size(Ad0,1),:)=D_cell{i};
    end
    
    Bqp=zeros(p.predHorizon*size(Ad0,1),p.predHorizon*size(Bd0,2));
    for i=1:p.predHorizon
        for j=1:i-1
            Bqp((i-1)*size(Ad0,1)+1:i*size(Ad0,1),...
                (j-1)*size(Bd0,2)+1:j*size(Bd0,2))=...
                D_cell(i-1)*Bd_cell(j);
        end
        Bqp((i-1)*size(Ad0,1)+1:i*size(Ad0,1),...
                (j-1)*size(Bd0,2)+1:j*size(Bd0,2))=...
                D_cell(i-1)*Bd_cell(j);
    end
end

%% get continus A
function Ac=get_Ac(psi)
%   rz from addpath("../fcns_sim");
    temp=zeros(3,1);
    temp(3,1)=1;
    Ac=[zeros(3),zeros(3),rz(psi),zeros(3),zeros(3,1);...
        zeros(3),zeros(3),zeros(3),eye(3),zeros(3,1);...
        zeros(3),zeros(3),zeros(3),zeros(3),zeros(3,1);...
        zeros(3),zeros(3),zeros(3),zeros(3),temp;...
        zeros(1,13)];
end
%% get continus B
function Bc= get_Bc(psi,pf34,p)
%   rz hatMaP from addpath("../fcns_sim");
    I=rz(psi)*p.J*rz(psi)';
    Bc=[zeros(3),zeros(3),zeros(3),zeros(3);...
        zeros(3),zeros(3),zeros(3),zeros(3);...
        I\hatMap(pf34(:,1)),I\hatMap(pf34(:,2)),I\hatMap(pf34(:,3)),I\hatMap(pf34(:,4));...
        eye(3)/p.mass,eye(3)/p.mass,eye(3)/p.mass,eye(3)/p.mass;...
        zeros(1,12)];
end
%% zero order hold discretized
function Ad=dis_A(Ac,T)
    n=4; %can be inf
    A_k=eye(size(Ac));
    Ad=A_k;
    for k=1:n
        A_k=Ac*A_k;
        Ad=Ad+A_k*T^k/factorial(k);
    end
end
%% zero order hold discretized
function Bd=dis_B(Ac,Bc,T)
    n=4;
    A_k=eye(size(Ac));
    Bd=T*Bc;
    for k=1:n
        A_k=Ac*A_k;
        Bd=Bd+A_k*Bc*T^(k+1)/factorial(k+1);
    end
end
